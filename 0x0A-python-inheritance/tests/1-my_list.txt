#1-my_list.txt

How to use 1-my_list.py
=======================

This module defines a sorted acesending order list printing function ``MyList(list)``
:
Usage
=====

   >>> MyList = __import__('1-my_list').MyList
   >>> my_list = MyList()
   >>> my_list.append(1)
   >>> my_list.append(3)
   >>> my_list.append(2)
   >>> print(my_list)
   [1, 3, 2]
   >>> my_list.print_sorted()
   [1, 2, 3]
   >>> print(my_list)
   [1, 3, 2]

Only attributes and methods available in the parent class can be called, else a NameError is raised.
:

   >>> MyList = __import__('1-my_list').MyList
   >>> my_list2.print_sorted()
   Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
   NameError: name 'my_list2' is not defined

The function expects a list as the argument
:

   >>> a = [3, 8, 6]
   >>> my_list = MyList(a)
   >>> my_list.print_sorted()
   [3, 6, 8]

Empty lists are printed as they are.
:

   >>> a = []
   >>> my_list = MyList(a)
   >>> my_list.print_sorted()
   []

Unique Number
=============

   >>> my_list = MyList()
   >>> my_list.append(1)
   >>> my_list.print_sorted()
   [1]
   >>> print(my_list)
   [1]


If the same number is passed, it is printed as well.
:
   >>> my_list2 = MyList()
   >>> my_list2.append(2)
   >>> my_list2.append(2)
   >>> my_list2.append(2)
   >>> my_list2.append(2)
   >>> my_list2.print_sorted()
   [2, 2, 2, 2]

The child class will raise an attributeError if the parent is not included.
:

   >>> my_list = [1, 2, 3]
   >>> my_list.print_sorted()
   Traceback (most recent call last):
    File "<stdin>", line 1, in <module>
   AttributeError: 'list' object has no attribute 'print_sorted'

Negative Numbers
================

   >>> my_list = MyList()
   >>> my_list.append(3)
   >>> my_list.append(4)
   >>> my_list.append(-2)
   >>> my_list.append(5)
   >>> my_list.append(1)
   >>> my_list.print_sorted()
   [-2, 1, 3, 4, 5]
